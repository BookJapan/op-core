
 - Instance
 
 	$op = new OnePiece5();
 	$form = $op->form();
 	print get_class($form);

 - AddForm
 	
 	//  Create form config.
 	$config = new Config();
 	
 	//  Set form name.
 	$config->name = 'form_name';
 	
 	//  Set submit input.
 	$config->input->input_name->type  = 'submit';
 	$config->input->input_name->label = 'SUBMIT';
 	$config->input->input_name->value = ' This is submit button. ';
 	
 	//  Add form config.
 	$op->form()->AddForm( $config );
 	
 - Start
 
 	//  Print Form tag from form_name.
 	$op->form()->Start('form_name');
 	
 	//  AND, Change submit url.
 	$op->form()->Start('form_name','/change/submit/url');
 
 - Finish
 
 	//  Print close Form tag from form_name. (</form>)
 	$op->form()->Finish('form_name');
 	
 - Input
 
 	//  Print input tag from input_name.
 	$op->form()->Input('input_name');
 	
 	//  AND, Change default value. (This is change default value. Change saved value is SetInputValue-method.)
 	$op->form()->Input('input_name','change default value');
 
 - Label
 
 	//  Print input tag from input_name.
 	$op->form()->Input('input_name');
 	
 - Error
 
 	//  Print validate error from input_name.
 	$op->form()->Error('input_name');
 	
 - Value
	
	//  Print submit value from input_name.
 	$op->form()->value('input_name');
 	
 - Secure
 
 	//  Check secure. Xsite, F5, reload, browser back, and validate from form_name.
 	$op->form()->secure('form_name');
 
 - Debug
 
 	//  Print debug information from form_name.
 	$op->form()->debug('form_name');
 	
 - GetInputValue

 	//  Get saved value of input. (saved value is secure)
 	$op->form()->GetInputValue('input_name');
 	
 - GetInputValueRaw

	//  GetInputValue-method is to changed the value.
 	//  GetInputValueRaw-method is not changed the value (raw data). (and secure value)
 	$op->form()->GetInputValueRaw('input_name');
 	
 - SetInputValue

 	//  Set value of input.
 	$op->form()->SetInputValue('input_name');
 	
 - Convert
 	
		$config->input->$input_name->convert = 'zenkaku';
		$config->input->$input_name->convert = 'katakana';
		$config->input->$input_name->convert = 'hankaku';

 - Validate
	 
	 - required
	 
		$config->input->$input_name->validate->required = true;
		
	 - length
		
		$config->input->$input_name->validate->length = '6-32';
		$config->input->$input_name->validate->length = '-10000';		

	 - range
		
		$config->input->$input_name->validate->range = '18-';   // over 18  (age)
		$config->input->$input_name->validate->range = '18-99'; // 18 to 99 
		$config->input->$input_name->validate->range = '-20';   // limit 20 (age)
				
	 - allow
	 
		$config->input->$input_name->validate->allow = '/@([a-z]\.)?(docomo|ezweb|softbank|vodafone).ne.jp$/i';
 
 	 - deny
 	 
 	 	$config->input->$input_name->validate->deny = '/[^0-9]?([0-9]{11}|[0-9]{2,3}[^0-9][0-9]{3,4}[^0-9][0-9]{3,4})[^0-9]?/';

 	 - permit
		
		$config->input->$input_name->validate->permit = 'integer';
		$config->input->$input_name->validate->permit = 'numeric';
		$config->input->$input_name->validate->permit = 'alphabet';
		$config->input->$input_name->validate->permit = 'english';
		$config->input->$input_name->validate->permit = 'url';
		$config->input->$input_name->validate->permit = 'email';		
		$config->input->$input_name->validate->permit = 'phone';
		$config->input->$input_name->validate->permit = 'date';
		$config->input->$input_name->validate->permit = 'datetime';
		$config->input->$input_name->validate->permit = 'domain_name';

	 - compare
	 
		$config->input->$input_name->validate->compare = 'other input name';
		$config->input->$input_name->validate->compare = '!= input_name';
		$config->input->$input_name->validate->compare = '>  input_name';
		$config->input->$input_name->validate->compare = '>= input_name';

 - Example

<?php
/* @var $op OnePiece5 */

//  Instance
$op = new OnePiece5();

//  config
$config = new Config();
$config->name = 'chat_form';

//  input of text
$config->input->comment->name  = 'comment';
$config->input->comment->label = 'Comment';
$config->input->comment->type  = 'text'; // textarea, checkbox, radio, select
$config->input->comment->validate->required = true;

//  input of submit button
$config->input->submit->name   = 'submit';
$config->input->submit->type   = 'submit';
$config->input->submit->value  = ' Do submit!! ';

//  Add form-config to form-object.
$op->form()->AddForm($config);

//  Print Form (generate form-tag)
$op->form()->Start('chat_form');

//  input (type is text)
$op->form()->Label('comment'); // input's Label
$op->form()->Input('comment'); // input-tag
$op->form()->Error('comment'); // input error, required, validate, etc.

//  input (type is submit)
$op->form()->Input('submit');

//  end of form (print close tag)
$op->form()->Finish('chat_form');

//  check validate
if( $op->form()->Secure('chat_form') ){
	$record['comment']   = $op->GetInputValue('comment');
	$record['timestamp'] = date('Y-m-d H:i:s');
	$_SESSION['chat'][]  = $record;
}

//  print comment
foreach( $_SESSION['chat'] as $record ){
	$comment   = $record['comment'];
	$timestamp = $record['timestamp'];
	print "<p> $comment ($timestamp)</p>";
}
 



